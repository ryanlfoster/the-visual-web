// =======================
// === APP.scss        ===
// === Your app styles ===
// =======================

html {
	overflow-y: scroll;
	overflow-x: hidden;
}

a {
	@include transition(all 300ms ease-in-out);
}

.container {
	padding-top: 50px;

	:first-child {
		margin-top: 0;
	}

	p a:link, li a:link {
		font-weight: $bold-font-weight;
		border-bottom:1px solid #fff;
		@include transition (border-color 250ms ease); //alows tansitioning of borders in

		&:hover {
			border-bottom:1px solid #000;
			@include transition (border-color 250ms ease);
		}
	}
}

/*.giant-logo {
	@include font-size(1000);
	position: fixed;
	top: 0px; left: 0;
	z-index: -1;
	text-align: center;
	font-weight: $bold-font-weight;
	color: #fafafa;
	@include square(0px);
	@include transform-origin(0%, 0%);
	@include rotate(44deg);
	@include user-select(none);
}*/


					@function makeList($n, $colors) {
					  $a: $n / length($colors);
					  $l: ();
					  @each $c in $colors {
					    @for $i from 1 through ceil($a) {
					      $l: append($l, $c);
					    }
					  }
					  @return $l;
					}

					@function defineSteps($n) {
					  $result: null;
					  @for $i from 1 through 100 {
					    @if $i * $n < 50 {
					      $result: $i;
					    }
					    @else {
					      @return $result * $n;
					    }
					  }
					}

					@mixin colorAnimator($hue: 0, $type: box-shadow) {
						//$ts: ();
					  	//animating background
					   	//$ts: hsl($hue, 100%, 55%);
					  	//background: $ts;
					  	//box-shadow:0 150px 200px red inset, 0 -190px 200px orange inset
					  	@if $type == box-shadow {
							$ts: ();
							@for $i from 1 through 3 {
							$ts: $ts, 0 $i * 120px 200px 0 hsl($hue + $i*15, 100%, 50% - $i) inset;
							}
							#{$type}: $ts;
						} @else if $type == color {
							$ts: hsl($hue, 100%, 40%);
							#{$type}: $ts;
						}
					}

					@mixin hover($index: 1, $cols: blue green yellow orange purple red) {
					  $ts: ();
					  $p: 1;
					  $c: makeList(defineSteps(length($cols)), $cols);
					  $colors: $c;

					   @for $i from 1 through length($colors) {
					    $index: if($index > length($colors) or $index == 0, 1, $index);
					    $color: nth($colors, $index);

					    $ts: $ts, $p*1px $p*1px 0 $color;

					    $p: $p + 1; $index: $index + 1;
					  }

					  text-shadow: $ts;
					}

					@include keyframes(rainbowBg) {
					  @for $i from 0 through 10 {
					    #{$i*10%} {
					      @include colorAnimator($i * 36, box-shadow);
					    }
					  }
					}
					@include keyframes(rainbowText) {
					  @for $i from 0 through 10 {
					    #{$i*10%} {
					      @include colorAnimator($i * 36, color);
					    }
					  }
					}

					@include keyframes(hover) {
					  @for $i from 0 through 50 {
					    #{$i*2%} {
					       @include hover($i);
					    }
					  }
					}

// ================
// === MASTHEAD ===
// ================
.masthead {
	color: #fff;
	//background: $orange;

	@include prefixer(animation, rainbowBg 100s linear infinite, webkit moz o ms spec);

	&:hover {
		//@include prefixer(animation, hover 2s linear infinite, webkit moz o ms spec);
		//@include prefixer(animation-direction, reverse, webkit moz o ms spec);

		& .is-active {
			//@include prefixer(animation, none, webkit moz o ms spec);
		}
	}

	a, h1, h2 {
		color: #fff;
	}
	h1, h2 {
		text-shadow: 0px 2px 3px #555;
	}

	h1 {
		margin-top: 0;
		margin-bottom: 20px;
	}

	h2 {
		margin-top: 20px;
	}
	a {
		text-shadow: 0px 1px 3px #555;
	}

	.is-active {
		text-shadow: none;
		@include prefixer(animation, rainbowText 100s linear infinite, webkit moz o ms spec);
	}
}

.masthead-home {
	text-align: center;
	padding: 60px 0;

	.logo {
		margin-top: 0;
		margin-bottom: 20px;
	}

	h2 {
		margin-top: 20px;
	}
}

.masthead-all {
	background-color: $orange;
	text-align: center;
	color: #fff;
	@include clearfix();

	.logo {
		float: left;
		margin: 0;
		@include font-size(30);
	}

	.nav {
		float: right;
	}

	.container {
		padding: 0;
		line-height: 50px;
	}
}

.nav {
	a {
		display: inline-block;
		padding: 3px 9px;
		font-weight: $bold-font-weight;
		margin: 0 5px;
		@include font-size(16);
		background: rgba(0, 0, 0, 0.15);
		@include border-radius(3px);
		line-height: 1.3;

		&:hover {
			background-color: darken($orange, 10%);
		}

		&.is-active {
			background-color: #fff;
			color: $orange;
		}
	}
}

.github-link {
	//background-color: darken($orange, 20%);
}

// Footer
.credits {
	margin: 80px 0;
	border-top: 2px solid $color-primary;
	padding-top: 20px;
}

// Stack logos
.stack-logos {
	margin: 10px auto;
	@include clearfix;
	@extend .unstyled;
	text-align: center;
	font-weight: $bold-font-weight;

	a {
		width: 70px;
		// height: 140px;
		// padding: 20px;
		display: inline-block;
		margin: 0 20px;
		vertical-align: baseline;
	}
}


// DEMOS
.grid-block-link {
	display: block;
	min-height: 130px;
	text-align: center;

	&:hover {
		background-color: $orange;
		color: #fff;
	}

	h3 {
		margin-top: 0;
	}

	.asset-font {
		@include font-size(150);
		line-height: 0.6;
	}

	:last-child {
		margin-bottom: 0;
	}
}


.entry--title {
	margin-top: 0;
	border-bottom: 2px solid $color-primary;
}

// Docs footer
.docs-footer {
	margin-top: 50px;
}

// ===========================================
// === Media queries for responsive design ===
// ===========================================
// NOTE: these will need to be adjusted, possibly moved into another file

// Retina media Queries
// Credit: http://dev.mattnt.com/retina-results.html
@media print,
	(-o-min-device-pixel-ratio: 5/4),
	(-webkit-min-device-pixel-ratio: 1.25),
	(min-resolution: 120dpi) {

	// * {
	// 	background-image: url(@imgSprite2x);
	// 	background-size: @imgSpriteDimensions;
	// }

}

// === 400> ===
@include respond-min($breakpoint-narrow) {

}
// === end 400> ===



// === 768> ===
@include respond-min($breakpoint-mid) {

}
// === end 768> ===


// === 992> ===
@include respond-min($breakpoint-wide) {

}
// === end 992> ===


// === 1382> ===
@include respond-min($breakpoint-huge) {

}
// === end 1382> ===
